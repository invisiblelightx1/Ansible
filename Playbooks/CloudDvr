---
- name: clouddvr
  hosts: all
  become: true
  tasks:
    - name: install plex
      ansible.builtin.shell:
        cmd: docker run -d \--name=plex \--net=host \-e PUID=1000 \-e PGID=1000 \-e TZ=Etc/UTC \-e VERSION=docker \-e PLEX_CLAIM= `#optional`\-v /path/to/library:/config \-v /path/to/tvseries:/tv \-v /path/to/movies:/movies \--restart unless-stopped \lscr.io/linuxserver/plex:latest

    - name: install sonarr
      ansible.builtin.shell:
        cmd: docker run -d \--name=sonarr \-e PUID=1000 \-e PGID=1000 \-e TZ=Etc/UTC \-p 8989:8989 \-v /path/to/data:/config \-v /path/to/tvseries:/tv `#optional` \-v /path/to/downloadclient-downloads:/downloads `#optional` \--restart unless-stopped \lscr.io/linuxserver/sonarr:latest

    - name: install radarr
      ansible.builtin.shell:
        cmd: docker run -d \--name=radarr \-e PUID=1000 \-e PGID=1000 \-e TZ=Etc/UTC \-p 7878:7878 \-v /path/to/data:/config \-v /path/to/movies:/movies `#optional` \-v /path/to/downloadclient-downloads:/downloads `#optional` \--restart unless-stopped \lscr.io/linuxserver/radarr:latest


    - name: install prowlarr
      ansible.builtin.shell:
        cmd: docker run -d \   --name=prowlarr \   -e PUID=1000 \   -e PGID=1000 \   -e TZ=Etc/UTC \   -p 9696:9696 \   -v /path/to/data:/config \   --restart unless-stopped \   lscr.io/linuxserver/prowlarr:latest

    - name: install unpackerr
      ansible.builtin.shell:
        cmd: docker run -e PUID=1000 -e PGID=100 -d -v /mnt/data:/data -v /mnt/config:/config hotio/unpackerr

    - name: install delugevpn
      ansible.builtin.shell:
        cmd: docker run -d \     --cap-add=NET_ADMIN \     -p 8112:8112 \     -p 8118:8118 \     -p 58846:58846 \     -p 58946:58946 \     --name=<container name> \     -v <path for data files>:/data \     -v <path for config files>:/config \     -v /etc/localtime:/etc/localtime:ro \     -e VPN_ENABLED=<yes|no> \     -e VPN_USER=<vpn username> \     -e VPN_PASS=<vpn password> \     -e VPN_PROV=<pia|airvpn|protonvpn|custom> \     -e VPN_CLIENT=<openvpn|wireguard> \     -e VPN_OPTIONS=<additional openvpn cli options> \     -e STRICT_PORT_FORWARD=<yes|no> \     -e ENABLE_PRIVOXY=<yes|no> \     -e LAN_NETWORK=<lan ipv4 network>/<cidr notation> \     -e NAME_SERVERS=<name server ip(s)> \     -e DELUGE_DAEMON_LOG_LEVEL=<info|warning|error|none|debug|trace|garbage> \     -e DELUGE_WEB_LOG_LEVEL=<info|warning|error|none|debug|trace|garbage> \     -e DELUGE_ENABLE_WEBUI_PASSWORD=<yes|no> \     -e VPN_INPUT_PORTS=<port number(s)> \     -e VPN_OUTPUT_PORTS=<port number(s)> \     -e DEBUG=<true|false> \     -e UMASK=<umask for created files> \     -e PUID=<UID for user> \     -e PGID=<GID for user> \     binhex/arch-delugevpn

    - name: install overseerr
      ansible.builtin.shell:
        cmd:   docker run -d \   --name=overseerr \   -e PUID=1000 \   -e PGID=1000 \   -e TZ=Etc/UTC \   -p 5055:5055 \   -v /path/to/appdata/config:/config \   --restart unless-stopped \   lscr.io/linuxserver/overseerr:latest  

    - name: install flaresolver
      ansible.builtin.shell:
        cmd:docker run -d \   --name=flaresolverr \   -p 8191:8191 \   -e LOG_LEVEL=info \   --restart unless-stopped \   ghcr.io/flaresolverr/flaresolverr:latest

    - name: install watchtower
      ansible.builtin.shell:
        cmd: docker run -d \     --name watchtower \     -v /var/run/docker.sock:/var/run/docker.sock \     containrrr/watchtower
    
    - name: install portainer
      ansible.builtin.shell:
        cmd: docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest   


